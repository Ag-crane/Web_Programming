
화면에 보이는 라인을 label이라고 함


조별과제
랜딩페이지 : 맨 앞에 서비스에 대한 소개를 나타내는 페이지

네비게이션 영역에 3가지 이상 (프로젝트 / 기획서 / 팀원소개)


* 동기 / 비동기

동기 처리 synchronous : 끝날때까지 기다려주는것
비동기 처리 asynchronous : 다른(분리된) 실행 컨텍스트에서 처리를 기다리게 하는것

ex) 유투브
처음 1분 로딩, 영상 재생하는 동안 밑에서 스트리밍(다음부분 받아오는작업)
동기적으로 처리하면 1분본다음에 다음 스트리밍까지 기다려야함
=> 비동기 처리
ex) 인스타 타임라인
새로고침하고싶어서 위에서 아래로 땡길때 (pull to request : PTR)
새로운 타임라인을 다운로드받아야함.
동기 -> 다운로드 받는동안 스토리도못보고 모든 게시글을 못봄
=> 비동기 처리

대부분의 경우는 비동기처리이지만, 동기처리가 필요한 경우도 있음

ex) 이메일 대용량 첨부할 때
업로드 하는 순간부터 - 업로드 중 - 보내기 버튼 활성화돼있음
-> 비동기처리하면 업로드되기전에 메일이 보내져버림. 
=> 동기 처리. 업로드가 끝난 후에 보내야함

기다리면서 뭘 할지를 정의해야함
콜백 : 기다린 다음에 할 행동
자바스크립트 setTimeout ( 함수 , 몇 ms 기다릴지 ) : ~만큼 기다렸다가 ~함수 실행해라
분리된 다른 컨텍스트 발생 -> 몇초만큼 기다렸다가 특정함수 실행
API불러오기 - 불러오는동안 화면이 못움직이면 답답하잖아 웹사이트가 죽은거같잖아 (실제로 오래되면 브라우저도 죽은 웹사이트로 취급)



---------------------------------------------------> UI (메인) 쓰레드 : 모든 동작들 해결 (클릭,호버,액티브한 동작들)
                	ㅣ
실행 컨텍스트 생성   ㄴ--몇초기다려------함수실행---------



--------------------------------------------------> 

